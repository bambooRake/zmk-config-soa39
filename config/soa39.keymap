#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <1>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    behaviors {
        // Temporary WS2812 widget behavior definition until external module is recognized

        ws2812_wdg: ws2812_widget {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>; // Placeholder - will be replaced by actual WS2812 implementation
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <9 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <10 11>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <9 8>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <18 19>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <22 23>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q           &kp W          &kp E         &kp R        &kp T         &kp Y            &kp U        &kp I         &kp O               &kp P
&mt A LCTRL     &kp S          &kp D         &mt F LCTRL  &kp G         &kp H            &kp J        &kp K         &kp L               &lt 5 MINUS
&kp Z           &kp X          &kp C         &kp V        &kp B         &kp SLASH        &kp N        &kp M         &kp COMMA           &kp PERIOD
&kp LEFT_SHIFT  &mt LCTRL TAB  &lt 6 DELETE  &lt 3 SPACE  &lt 2 ESCAPE  &lt 3 BACKSPACE  &lt 2 ENTER  &kp LEFT_ALT  &mt LEFT_WIN EQUAL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans              &trans               &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1            &mkp MB3             &mkp MB2  &lt 5 MINUS
&trans  &trans  &trans  &trans  &trans  &trans  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans              &trans               &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp F1           &kp F2       &kp F3    &kp F4      &kp F5          &trans     &kp UP         &trans        &kp SQT               &kp SEMICOLON
&kp F6           &kp F7       &kp F8    &kp F9      &kp F10         &trans     &kp LEFT       &kp DOWN      &kp RIGHT             &trans
&kp F11          &kp F12      &trans    &trans      &kp LANGUAGE_2  &trans     &trans         &trans        &trans
            >;
        };

        NUM {
            bindings = <
&kp N1            &kp N2             &kp N3          &kp N4           &kp N5         &kp N6          &kp N7  &kp N8      &kp N9     &kp N0
&trans            &trans             &trans          &kp SLASH        &kp BACKSLASH  &trans          &kp N4  &kp N5      &kp N6     &kp ASTERISK
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE       &trans          &kp N0  &kp N1      &kp N2     &kp N3
&trans            &trans             &trans          &trans           &trans         &kp LANGUAGE_1  &trans  &kp PERIOD  &kp SLASH
            >;
        };

        ARROW {
            bindings = <
&trans  &trans    &kp UP    &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans        &trans        &trans        &trans       &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4
&trans        &trans        &trans        &trans       &trans       &trans        &trans        &trans          &trans        &ws2812_wdg
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &ws2812_wdg  &bootloader  &trans        &trans        &trans          &trans        &bt BT_CLR
&trans        &trans        &trans        &trans       &trans       &trans        &trans        &bt BT_CLR_ALL  &trans
            >;
        };
    };
};
